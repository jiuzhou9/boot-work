<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jiuzhou.bootwork.dao.mapper.AccesskeyMapper">
  <resultMap id="BaseResultMap" type="com.jiuzhou.bootwork.dao.model.Accesskey">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="key" jdbcType="VARCHAR" property="key" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="company_code" jdbcType="VARCHAR" property="companyCode" />
    <result column="user_code" jdbcType="VARCHAR" property="userCode" />
    <result column="secret" jdbcType="VARCHAR" property="secret" />
    <result column="private_secret" jdbcType="VARCHAR" property="privateSecret" />
    <result column="constraint" jdbcType="VARCHAR" property="constraint" />
    <result column="expire_time" jdbcType="TIMESTAMP" property="expireTime" />
    <result column="active" jdbcType="BIT" property="active" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, key, name, company_code, user_code, secret, private_secret, constraint, expire_time, 
    active, create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="com.jiuzhou.bootwork.dao.model.AccesskeyExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from accesskey
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="com.jiuzhou.bootwork.dao.model.AccesskeyKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from accesskey
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.jiuzhou.bootwork.dao.model.AccesskeyKey">
    delete from accesskey
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.jiuzhou.bootwork.dao.model.AccesskeyExample">
    delete from accesskey
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jiuzhou.bootwork.dao.model.Accesskey">
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into accesskey (id, key, name, 
      company_code, user_code, secret, 
      private_secret, constraint, expire_time, 
      active, create_time, update_time
      )
    values (#{id,jdbcType=INTEGER}, #{key,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{companyCode,jdbcType=VARCHAR}, #{userCode,jdbcType=VARCHAR}, #{secret,jdbcType=VARCHAR}, 
      #{privateSecret,jdbcType=VARCHAR}, #{constraint,jdbcType=VARCHAR}, #{expireTime,jdbcType=TIMESTAMP}, 
      #{active,jdbcType=BIT}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.jiuzhou.bootwork.dao.model.Accesskey">
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into accesskey
    <trim prefix="(" suffix=")" suffixOverrides=",">
      id,
      <if test="key != null">
        key,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="companyCode != null">
        company_code,
      </if>
      <if test="userCode != null">
        user_code,
      </if>
      <if test="secret != null">
        secret,
      </if>
      <if test="privateSecret != null">
        private_secret,
      </if>
      <if test="constraint != null">
        constraint,
      </if>
      <if test="expireTime != null">
        expire_time,
      </if>
      <if test="active != null">
        active,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{id,jdbcType=INTEGER},
      <if test="key != null">
        #{key,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="companyCode != null">
        #{companyCode,jdbcType=VARCHAR},
      </if>
      <if test="userCode != null">
        #{userCode,jdbcType=VARCHAR},
      </if>
      <if test="secret != null">
        #{secret,jdbcType=VARCHAR},
      </if>
      <if test="privateSecret != null">
        #{privateSecret,jdbcType=VARCHAR},
      </if>
      <if test="constraint != null">
        #{constraint,jdbcType=VARCHAR},
      </if>
      <if test="expireTime != null">
        #{expireTime,jdbcType=TIMESTAMP},
      </if>
      <if test="active != null">
        #{active,jdbcType=BIT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jiuzhou.bootwork.dao.model.AccesskeyExample" resultType="java.lang.Long">
    select count(*) from accesskey
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update accesskey
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.key != null">
        key = #{record.key,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.companyCode != null">
        company_code = #{record.companyCode,jdbcType=VARCHAR},
      </if>
      <if test="record.userCode != null">
        user_code = #{record.userCode,jdbcType=VARCHAR},
      </if>
      <if test="record.secret != null">
        secret = #{record.secret,jdbcType=VARCHAR},
      </if>
      <if test="record.privateSecret != null">
        private_secret = #{record.privateSecret,jdbcType=VARCHAR},
      </if>
      <if test="record.constraint != null">
        constraint = #{record.constraint,jdbcType=VARCHAR},
      </if>
      <if test="record.expireTime != null">
        expire_time = #{record.expireTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.active != null">
        active = #{record.active,jdbcType=BIT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update accesskey
    set id = #{record.id,jdbcType=INTEGER},
      key = #{record.key,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      company_code = #{record.companyCode,jdbcType=VARCHAR},
      user_code = #{record.userCode,jdbcType=VARCHAR},
      secret = #{record.secret,jdbcType=VARCHAR},
      private_secret = #{record.privateSecret,jdbcType=VARCHAR},
      constraint = #{record.constraint,jdbcType=VARCHAR},
      expire_time = #{record.expireTime,jdbcType=TIMESTAMP},
      active = #{record.active,jdbcType=BIT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jiuzhou.bootwork.dao.model.Accesskey">
    update accesskey
    <set>
      <if test="key != null">
        key = #{key,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="companyCode != null">
        company_code = #{companyCode,jdbcType=VARCHAR},
      </if>
      <if test="userCode != null">
        user_code = #{userCode,jdbcType=VARCHAR},
      </if>
      <if test="secret != null">
        secret = #{secret,jdbcType=VARCHAR},
      </if>
      <if test="privateSecret != null">
        private_secret = #{privateSecret,jdbcType=VARCHAR},
      </if>
      <if test="constraint != null">
        constraint = #{constraint,jdbcType=VARCHAR},
      </if>
      <if test="expireTime != null">
        expire_time = #{expireTime,jdbcType=TIMESTAMP},
      </if>
      <if test="active != null">
        active = #{active,jdbcType=BIT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jiuzhou.bootwork.dao.model.Accesskey">
    update accesskey
    set key = #{key,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      company_code = #{companyCode,jdbcType=VARCHAR},
      user_code = #{userCode,jdbcType=VARCHAR},
      secret = #{secret,jdbcType=VARCHAR},
      private_secret = #{privateSecret,jdbcType=VARCHAR},
      constraint = #{constraint,jdbcType=VARCHAR},
      expire_time = #{expireTime,jdbcType=TIMESTAMP},
      active = #{active,jdbcType=BIT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>